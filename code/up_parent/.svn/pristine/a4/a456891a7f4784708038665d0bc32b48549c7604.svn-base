package com.upsoft.yxsw.controller;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.lang3.StringUtils;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.util.WebUtils;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import com.upsoft.login.controller.BaseController;
import com.upsoft.login.support.webservice.SysUtils;
import com.upsoft.system.bean.PageBean;
import com.upsoft.system.bean.ResultBean;
import com.upsoft.system.bean.WSLoginInfoBean;
import com.upsoft.system.constant.CommonConstant;
import com.upsoft.system.util.BeanUtil;
import com.upsoft.system.util.DateUtil;
import com.upsoft.yxsw.constant.DictConstant;
import com.upsoft.yxsw.entity.BizTXjWorkGroup;
import com.upsoft.yxsw.entity.BizTXjWorkGroupDetial;
import com.upsoft.yxsw.service.BizTXjWorkGroupDetialService;
import com.upsoft.yxsw.service.BizTXjWorkGroupService;

/**
 * Copyright (c) 2015,重庆扬讯软件技术有限公司<br>
 * All rights reserved.<br>
 *
 * 文件名称：BizTXjWorkGroupController.java<br>
 * 摘要：<br>
 * -------------------------------------------------------<br>
 * 当前版本：1.1.0<br>
 * 作者：<br>
 * 完成日期：2017-09-14 <br>
 */
@Controller
@RequestMapping(WorkPeriodController.FORWARD_PREFIX)
public class WorkPeriodController extends BaseController{
	
	protected static final String FORWARD_PREFIX = "/workPeriod";
	private static final String JSP_PREFIX = "/WEB-INF/jsp/work_period";
	private Logger logger = Logger.getLogger(WorkPeriodController.class);
	
	@Autowired
	public BizTXjWorkGroupService workGroupService;
	@Autowired
	public BizTXjWorkGroupDetialService workGroupDetailService;
	
	/**
	 *  初始化页面
	 * @param map
	 * @return
	 */
	@RequestMapping("/init")
	public String init(ModelMap map, HttpServletRequest request){
		
		super.findMenuResourcePermission(request, map);
		map.addAllAttributes(WebUtils.getParametersStartingWith(request, null));
		return JSP_PREFIX.concat("/period_list");
	}
	
	/**
	 * 获取班次列表
	 * @date 2017年9月15日 下午3:56:08
	 * @param request
	 * @param map
	 * @return
	 */
	@ResponseBody
	@RequestMapping("/getPeriodList")
	public Map<String,Object> getPeriodList(HttpServletRequest request, ModelMap map){
		
		WSLoginInfoBean userLoginInfo = SysUtils.getLoginInfo(request);
		PageBean bean = new PageBean(request);
		Map<String, Object> params = new HashMap<String, Object>();
		//班次名称
		params.put("workGroupName", WebUtils.findParameterValue(request, "workGroupName"));
		if(StringUtils.equals(userLoginInfo.getCsOrgTypeId(), CommonConstant.orgType.FACTORY.getKey())){
			params.put("orgCode", userLoginInfo.getCsOrgId());
		}
		
		return workGroupService.getList(bean, params);
	}
	
	/**
	 * 跳转到新增班次页面
	 * @date 2017年9月15日 下午8:54:11
	 * @param request
	 * @param map
	 * @return
	 */
	@RequestMapping("/toAddWp")
	public String toAddWp(HttpServletRequest request,ModelMap map){
		
		map.put("backURL", WebUtils.findParameterValue(request, "backURL"));
		map.put("CHECKITEM_SFMR", DictConstant.CHECKITEM_SFMR);
		return JSP_PREFIX.concat("/period_add");
	}
	
	/**
	 * 保存新增班次
	 * @date 2017年9月15日 下午9:03:41
	 * @param request
	 * @param map
	 * @param workGroup
	 * @param workGroupDetialList
	 * @return
	 */
	@ResponseBody
	@RequestMapping("/doAddWp")
	public ResultBean doAddWp(HttpServletRequest request,ModelMap map, BizTXjWorkGroup workGroup, String workGroupDetialList){
		
		WSLoginInfoBean userLoginInfo = SysUtils.getLoginInfo(request);
		ResultBean result = new ResultBean();
		
		try {
			List<BizTXjWorkGroupDetial> detailList = new Gson().fromJson(workGroupDetialList, new TypeToken<List<BizTXjWorkGroupDetial>>() {}.getType());
			workGroup.setBelongWscId(userLoginInfo.getCsOrgId());
			workGroup.setBelongWscnAme(userLoginInfo.getCsOrgName());
			workGroup.setCreatorAccount(userLoginInfo.getUser().getUserId());
			workGroup.setCreatorName(userLoginInfo.getUser().getUserName());
			workGroup.setCreateTimestemp(DateUtil.dateToString(new Date(), DateUtil.DATE_FULL_FORMAT_N));
			workGroup.setStartTime(DateUtil.stringToString(workGroup.getStartTime(), "HH:mm", "HHmm"));
			workGroup.setEndTime(DateUtil.stringToString(workGroup.getEndTime(), "HH:mm", "HHmm"));
			
			workGroupService.save(workGroup, detailList);
			
			result.setFlag(true);
			result.setMessage("保存成功");
		} catch (Exception e) {
			
			result.setFlag(false);
			result.setMessage("保存失败");
			logger.error("保存班次信息失败", e);
		}
		return result;
	}
	
	/**
	 * 跳转到编辑班次信息页面
	 * @date 2017年9月15日 下午9:06:57
	 * @param request
	 * @param map
	 * @param workGroupId
	 * @return
	 */
	@RequestMapping("/toEditWp")
	public String toEditWp(HttpServletRequest request, ModelMap map, @RequestParam(value="workGroupId", required=true) String workGroupId){
		
		BizTXjWorkGroup wp = workGroupService.getBizTXjWorkGroupById(workGroupId);
		wp.setStartTime(DateUtil.stringToString(wp.getStartTime(), "HHmm", "HH:mm"));
		wp.setEndTime(DateUtil.stringToString(wp.getEndTime(), "HHmm", "HH:mm"));
		map.put("wp", wp);
		map.put("backURL", WebUtils.findParameterValue(request, "backURL"));
		return JSP_PREFIX.concat("/period_edit");
	}
	
	@ResponseBody
	@RequestMapping("/doSaveEditWp")
	public ResultBean doSaveEditWp(HttpServletRequest request,ModelMap map, BizTXjWorkGroup workGroup, String workGroupDetialList, String delDetailList){
		
		WSLoginInfoBean userLoginInfo = SysUtils.getLoginInfo(request);
		ResultBean result = new ResultBean();
		
		try {
			List<BizTXjWorkGroupDetial> detailList = new Gson().fromJson(workGroupDetialList, new TypeToken<List<BizTXjWorkGroupDetial>>() {}.getType());
			List<BizTXjWorkGroupDetial> delList = new Gson().fromJson(delDetailList, new TypeToken<List<BizTXjWorkGroupDetial>>() {}.getType());
			BizTXjWorkGroup workGroupOri = workGroupService.getBizTXjWorkGroupById(workGroup.getWorkGroupId());
			if(null == workGroupOri || !StringUtils.equals(workGroupOri.getUpdateTimestemp(), workGroup.getUpdateTimestemp())){
				result.setFlag(false);
				result.setMessage("删除失败，数据已更新，请刷新后重试！");
			}else{
				BeanUtil.copyPropertiesIgnoreNull(workGroup, workGroupOri);
//				workGroup.setBelongWscId(userLoginInfo.getCsOrgId());
//				workGroup.setBelongWscnAme(userLoginInfo.getCsOrgName());
				workGroupOri.setUpdatorAccount(userLoginInfo.getUser().getUserId());
				workGroupOri.setUpdatorName(userLoginInfo.getUser().getUserName());
				workGroupOri.setUpdateTimestemp(DateUtil.dateToString(new Date(), DateUtil.DATE_FULL_FORMAT_N));
				workGroupOri.setStartTime(DateUtil.stringToString(workGroup.getStartTime(), "HH:mm", "HHmm"));
				workGroupOri.setEndTime(DateUtil.stringToString(workGroup.getEndTime(), "HH:mm", "HHmm"));
				
				workGroupService.save(workGroupOri, detailList, delList);
				result.setFlag(true);
				result.setMessage("保存成功<br>班次若变动请及时更改排班及任务信息");
			}
		} catch (Exception e) {
			
			result.setFlag(false);
			result.setMessage("保存失败");
			logger.error("保存班次信息失败", e);
		}
		return result;
	}
	/**
	 * 获取班次详情列表
	 * @date 2017年9月18日 下午9:16:23
	 * @param request
	 * @param map
	 * @return
	 */
	@SuppressWarnings("unchecked")
	@ResponseBody
	@RequestMapping("/getDetailList")
	public Map<String, Object> getDetailList(HttpServletRequest request, ModelMap map, @RequestParam(value="workGroupId", required=true) String workGroupId){
		
		WSLoginInfoBean userLoginInfo = SysUtils.getLoginInfo(request);
		PageBean bean = new PageBean(request);
		bean.setPageSize(0);	//不分页
		Map<String, Object> params = new HashMap<String, Object>();
		
		//班次Id
		params.put("workGroupId", workGroupId);
		//如果用户属于厂站用户，则按厂所查询
		if(StringUtils.equals(userLoginInfo.getCsOrgTypeId(), CommonConstant.orgType.FACTORY.getKey())){
			params.put("orgCode", userLoginInfo.getCsOrgCode());
		}
		
		Map<String, Object> result = workGroupDetailService.getList(bean, params);
		List<Map<String, Object>> rows = (List<Map<String, Object>>) result.get("rows");
		for (Map<String, Object> row : rows) {
			row.put("start_time", DateUtil.stringToString(row.get("start_time").toString(), "HHmm", "HH:mm"));
			row.put("end_time", DateUtil.stringToString(row.get("end_time").toString(), "HHmm", "HH:mm"));
		}
		return result;
	}
	
	/**
	 * 跳转到查看班次信息页面
	 * @date 2017年9月18日 下午9:02:06
	 * @param request
	 * @param map
	 * @param wpId
	 * @return
	 */
	@RequestMapping("/toViewWp")
	public String toViewWp(HttpServletRequest request, ModelMap map, @RequestParam(value="workGroupId", required=true) String workGroupId){
		
		map.put("backURL", WebUtils.findParameterValue(request, "backURL"));
		BizTXjWorkGroup wp = workGroupService.getBizTXjWorkGroupById(workGroupId);
		wp.setStartTime(DateUtil.stringToString(wp.getStartTime(), "HHmm", "HH:mm"));
		wp.setEndTime(DateUtil.stringToString(wp.getEndTime(), "HHmm", "HH:mm"));
		map.put("wp", wp);
		return JSP_PREFIX.concat("/period_view");
	}
	
	/**
	 * 删除班次
	 * @date 2017年9月19日 上午9:28:08
	 * @param request
	 * @param map
	 * @param wpId
	 * @deprecated 删除功能不开放
	 * @return
	 */
	@ResponseBody
	@RequestMapping("/doDelWp")
	@Deprecated
	public ResultBean doDelWp(HttpServletRequest request, ModelMap map, @RequestParam(value="workGroupId", required=true) String workGroupId, @RequestParam(value="updateTimestemp", required=true) String timestamp){
		ResultBean result = new ResultBean();
		BizTXjWorkGroup workGroup = workGroupService.getBizTXjWorkGroupById(workGroupId);
		if(null == workGroup || !StringUtils.equals(timestamp, workGroup.getUpdateTimestemp())){
			result.setFlag(false);
			result.setMessage("删除失败，数据已更新，请刷新后重试！");
		}else{
			try {
				workGroupService.deleteWorkGroup(workGroupId);
				result.setFlag(true);
				result.setMessage("删除成功！");
			} catch (Exception e) {
				result.setFlag(false);
				result.setMessage("删除失败！");
				logger.error("删除班次设置失败", e);
			}
		}
		return result;
	}
	
	/**
	 * 删除班次详情
	 * @date 2017年9月19日 上午9:28:08
	 * @param request
	 * @param map
	 * @param wpId
	 * @return
	 */
	@ResponseBody
	@RequestMapping("/doDelWpDetail")
	public ResultBean doDelWpDetail(HttpServletRequest request, ModelMap map, @RequestParam(value="wpdId", required=true) String wpdId, @RequestParam(value="updateTimestemp", required=true) String timestamp){
		ResultBean result = new ResultBean();
		return result;
	}
	
	/**
	 * 获取当前登录人员所在厂所的排班班次
	 * @date 2017年9月21日 下午1:56:09
	 * @param request
	 * @param map
	 * @return
	 */
	@ResponseBody
	@RequestMapping("/getWpDetail")
	public List<Map<String, Object>> getWpDetail(HttpServletRequest request, ModelMap map){
		
		WSLoginInfoBean userLoginInfo = SysUtils.getLoginInfo(request);
		return workGroupDetailService.workGroupDetialList(userLoginInfo.getCsOrgId());
	}
}
