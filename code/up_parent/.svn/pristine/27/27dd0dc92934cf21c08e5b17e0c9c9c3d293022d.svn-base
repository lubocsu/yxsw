package com.upsoft.yxsw.controller.cxMake;

import java.lang.reflect.InvocationTargetException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.beanutils.BeanUtils;
import org.apache.commons.lang3.StringUtils;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import com.upsoft.login.support.webservice.ServiceReceiver;
import com.upsoft.login.support.webservice.SysUtils;
import com.upsoft.system.bean.PageBean;
import com.upsoft.system.bean.ResultBean;
import com.upsoft.system.bean.WSLoginInfoBean;
import com.upsoft.system.constant.CommonConstant;
import com.upsoft.system.util.ExceptionFormatUtil;
import com.upsoft.yxsw.constant.Constant;
import com.upsoft.yxsw.constant.DictConstant;
import com.upsoft.yxsw.controller.checkItem.BizTGgCheckItemController;
import com.upsoft.yxsw.controller.cxMake.bean.CxMakeDetailPojo;
import com.upsoft.yxsw.controller.cxMake.bean.WriteCxMakeSBPojo;
import com.upsoft.yxsw.entity.BizTXjZypCxMake;
import com.upsoft.yxsw.service.BizTXjZypCxMakeService;

/**
* Copyright (c) 2017,重庆扬讯软件技术有限公司<br>
* All rights reserved.<br>
*
* 文件名称：WriteCxMakeController.java<br>
* 摘要：作业票填报<br>
* -------------------------------------------------------<br>
* 取代版本：1.1.0<br>
* 原作者：胡毅<br>
* 完成日期：2017年9月30日<br>
 */
@Controller
@RequestMapping("/writeCxMake")
public class WriteCxMakeController {
	private static final String JSP_PREFIX = "/WEB-INF/jsp/cxMake/writeCxMake";
	private static final Logger logger = Logger.getLogger(BizTGgCheckItemController.class);
	
	@Autowired
	private BizTXjZypCxMakeService bizTXjZypCxMakeService;
	
	@RequestMapping("/init")
	public String init(ModelMap map,String queryParam){
		map.put("zyp",new Gson().fromJson(queryParam, BizTXjZypCxMake.class));
		return JSP_PREFIX+"/main";
	}
	
	@SuppressWarnings("unchecked")
	@RequestMapping("/getCxMakeList")
	@ResponseBody
	public Map<String,Object> getCxMakeList(HttpServletRequest request,BizTXjZypCxMake param){
		Map<String,Object> paramMap = new HashMap<String,Object>();
		PageBean pageBean = new PageBean(request);
		try {
			paramMap = BeanUtils.describe(param);
			// 查询已审核和在填报作业票
			List<String> cxzypStatusList = new ArrayList<String>();
			cxzypStatusList.add(Constant.ZYP_STAUTS.AUDITED.getValue());
			cxzypStatusList.add(Constant.ZYP_STAUTS.WRITING.getValue());
			paramMap.put("cxzypStatus", cxzypStatusList);
			// 获取当前厂站作业票
			WSLoginInfoBean loginInfo = SysUtils.getLoginInfo(request);
			List<String> belongWscIdList = new ArrayList<String>();
			if(Integer.valueOf(loginInfo.getCsOrgTypeId()) < Integer.valueOf(CommonConstant.orgType.FACTORY.getKey()) ){
				belongWscIdList = ServiceReceiver.getPermissionOrgIds(loginInfo.getUser().getUserId());
			}else{
				belongWscIdList.add(loginInfo.getCsOrgId());
			}
			paramMap.put("belongWscId",belongWscIdList);
			
		} catch (IllegalAccessException | InvocationTargetException | NoSuchMethodException e1) {
			logger.error("查询未填报作业票分页数据时，将参数bean转为map时出错："+e1.getMessage());
		}
		Map<String,Object> result = bizTXjZypCxMakeService.getCxMakeList(pageBean,paramMap);
		return result;
	}  
	
	/**
	 * 
	 * @date 2017年10月10日 下午1:40:30
	 * @author 胡毅
	 */
	@RequestMapping("/toModify")
	public String toModify(@RequestParam(required = true)String cxMakeId,String backURL,String queryParam,ModelMap mod){
		mod.put("queryParam", queryParam);
		mod.put("backURL", backURL);
		CxMakeDetailPojo pojo = bizTXjZypCxMakeService.getZYPDetailForPC(cxMakeId);
		mod.put("zyp", pojo);
		mod.put("TEXT_INPUT_TYPE", Constant.CHECKITEM_INPUTTYPE_VALUE.TEXT.getValue());
		mod.put("NUM_INPUT_TYPE", Constant.CHECKITEM_INPUTTYPE_VALUE.NUM.getValue());
		mod.put("WEATHER_LIST", ServiceReceiver.getDictSelect(DictConstant.WEATHER_TYPE.getValue()));
		return JSP_PREFIX+"/modify";
	}
	
	/**
	 * 
	 * @date 2017年10月10日 下午4:57:31
	 * @author 胡毅
	 * @param makeTmpItemJSONArr
	 * @param saveType 保存类型 1 仅保存，2 保存并提交
	 * @param cxMakeId
	 * @param weather
	 * @param request
	 * @return
	 */
	@RequestMapping("/doModify")
	@ResponseBody
	public ResultBean doModify(@RequestParam(required = true)String makeTmpItemJSONArr,
								@RequestParam(required = true)String saveType,
								@RequestParam(required = true)String cxMakeId,
								String weather,HttpServletRequest request){
		ResultBean result = new ResultBean();
		List<WriteCxMakeSBPojo> makeTmpItemJSONList = new Gson().fromJson(makeTmpItemJSONArr,  new TypeToken<List<WriteCxMakeSBPojo>>() {}.getType());
		try {
			WSLoginInfoBean loginInfo = SysUtils.getLoginInfo(request);
			bizTXjZypCxMakeService.saveCxMakeTmpItemSBValue(makeTmpItemJSONList,loginInfo,saveType,cxMakeId,weather);
			if(StringUtils.equals(saveType, "1")){
				result.setMessage("作业票填报保存成功");
			}else{
				result.setMessage("作业票填报保存并提交成功");
			}
		} catch (Exception e) {
			result.setFlag(false);
			result.setMessage("作业票填报时出错"+e.getMessage());
			logger.error("作业票填报时出错："+ExceptionFormatUtil.formatExceptionTrace(e));
		}
		return result;
	}
}
